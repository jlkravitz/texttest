arch_strong ~ arch_weak,
stat_summed_mean_difference,
num_permutations = 5000
) %>%
digest_plot(binwidth = 0.05)
devtools::install_github("jlkravitz/texttest", auth_token = "05a95d6576a0040c198b2ae8c4dfb3dac22db4dd")
?unnest_tokens
`%>%`
:`%>%`
?`%>%`
predict
glm
binomial
?stats
data
df
df %>% nest()
df %>% nest(data = everything())
c(a ~ b, b ~ c)
c(a ~ b, b ~ c) %>% typof
c(a ~ b, b ~ c) %>% typof()
c(a ~ b, b ~ c) %>% typeof()
c(a ~ b, b ~ c) %>% class
a ~ b %>% typeof
a ~ b %>% class
a ~ b %>% class()
(a ~ b) %>% class()
(a ~ b) %>% type
(a ~ b) %>% typeof
c(a ~ b, b ~ c) %>% class
list(a ~ b, b ~ c) %>% class
list(deek = a ~ b, b ~ c) %>% class
list(deek = a ~ b, b ~ c) %>% typeof
is.list(list(a ~ b, b ~ c))
is.list(a ~ b)
is.list(c(a ~ b))
is.list(c(a ~ b, b ~ c))
c() %>% typeof
c(a~ b) %>% typeof
c(a~ b) %>% class
devtools::install_github("jlkravitz/texttest", auth_token = "05a95d6576a0040c198b2ae8c4dfb3dac22db4dd")
source('~/Documents/texttest/R/measure.R', echo=TRUE)
df
df %>% measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
)
devtools::install_github("jlkravitz/texttest", auth_token = "05a95d6576a0040c198b2ae8c4dfb3dac22db4dd")
digest
source('~/Documents/texttest/R/digest.R', echo=TRUE)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
arch_strong ~ arch_weak,
stat_summed_mean_difference
)
source('~/Documents/texttest/R/digest.R', echo=TRUE)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
arch_strong ~ arch_weak,
stat_summed_mean_difference
)
?do
source('~/Documents/texttest/R/digest.R', echo=TRUE)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
arch_strong ~ arch_weak,
stat_summed_mean_difference
)
source('~/Documents/texttest/R/digest.R', echo=TRUE)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
arch_strong ~ arch_weak,
stat_summed_mean_difference
)
source('~/Documents/texttest/R/digest.R', echo=TRUE)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
arch_strong ~ arch_weak,
stat_summed_mean_difference,
num_permutations = 5)
source('~/Documents/texttest/R/measure.R', echo=TRUE)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
arch_strong ~ arch_weak,
stat_summed_mean_difference,
num_permutations = 5)
sample
source('~/Documents/texttest/R/digest.R', echo=TRUE)
sample
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
arch_strong ~ arch_weak,
stat_summed_mean_difference,
num_permutations = 5)
source('~/Documents/texttest/R/digest.R', echo=TRUE)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
arch_strong ~ arch_weak,
stat_summed_mean_difference,
num_permutations = 5)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
arch_strong ~ arch_weak,
stat_summed_mean_difference,
num_permutations = 5)
source('~/Documents/texttest/R/digest.R', echo=TRUE)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
arch_strong ~ arch_weak,
stat_summed_mean_difference,
num_permutations = 5)
source('~/Documents/texttest/R/digest.R', echo=TRUE)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
arch_strong ~ arch_weak,
stat_summed_mean_difference,
num_permutations = 5)
source('~/Documents/texttest/R/digest.R', echo=TRUE)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
arch_strong ~ arch_weak,
stat_summed_mean_difference,
num_permutations = 5)
source('~/Documents/texttest/R/digest.R', echo=TRUE)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
arch_strong ~ arch_weak,
stat_summed_mean_difference,
num_permutations = 5)
source('~/Documents/texttest/R/digest.R', echo=TRUE)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
arch_strong ~ arch_weak,
stat_summed_mean_difference,
num_permutations = 5)
source('~/Documents/texttest/R/digest.R', echo=TRUE)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
arch_strong ~ arch_weak,
stat_summed_mean_difference,
num_permutations = 5)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(arch_strong ~ arch_weak, arch_graphic ~ arch_weak)
stat_summed_mean_difference,
num_permutations = 5)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(arch_strong ~ arch_weak, arch_graphic ~ arch_weak),
stat_summed_mean_difference,
num_permutations = 5)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(arch_strong ~ arch_weak, arch_graphic ~ arch_weak),
stat_summed_mean_difference,
num_permutations = 5)
df %>%   measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(arch_strong ~ arch_weak, arch_graphic ~ arch_weak),
stat_summed_mean_difference,
num_permutations = 50)
devtools::install_github("jlkravitz/texttest", auth_token = "05a95d6576a0040c198b2ae8c4dfb3dac22db4dd")
outer
?outer
data
df
df$arm
devtools::load_all(".")
set_trmt(df, arch_strong ~ arch_weak)
data <- set_trmt(df, arch_strong ~ arch_weak)
predict(glm(trmt ~ ., data = df, family = binomial(link = "logit")))
predict(glm(trmt ~ ., data = data, family = binomial(link = "logit")))
Concordance(data$arm, predict(glm(trmt ~ ., data = data, family = binomial(link = "logit"))))
Concordance(data$trmt, predict(glm(trmt ~ ., data = data, family = binomial(link = "logit"))))
data
spread_measurements
df %>%
measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(
arch_strong              ~ arch_weak
# arch_weak                ~ arch_graphic,
# arch_graphic             ~ control,
# arch_weak + arch_graphic ~ curb_appeal + control
),
stat_classifier,
num_permutations = 10
)
source('~/Documents/texttest/R/stat_classifier.R', echo=TRUE)
df %>%
measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(
arch_strong              ~ arch_weak
# arch_weak                ~ arch_graphic,
# arch_graphic             ~ control,
# arch_weak + arch_graphic ~ curb_appeal + control
),
stat_classifier,
num_permutations = 10
)
source('~/Documents/texttest/R/stat_classifier.R', echo=TRUE)
df %>%
measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(
arch_strong              ~ arch_weak
# arch_weak                ~ arch_graphic,
# arch_graphic             ~ control,
# arch_weak + arch_graphic ~ curb_appeal + control
),
stat_classifier,
num_permutations = 10
)
df %>%
measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(
arch_strong              ~ arch_weak
# arch_weak                ~ arch_graphic,
# arch_graphic             ~ control,
# arch_weak + arch_graphic ~ curb_appeal + control
),
stat_classifier,
num_permutations = 10
) %>% pull(stats_permuted)
source('~/Documents/texttest/R/stat_classifier.R', echo=TRUE)
df %>%
measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(
arch_strong              ~ arch_weak
# arch_weak                ~ arch_graphic,
# arch_graphic             ~ control,
# arch_weak + arch_graphic ~ curb_appeal + control
),
stat_classifier,
num_permutations = 10
) %>% pull(stats_permuted)
source('~/Documents/texttest/R/stat_classifier.R', echo=TRUE)
df %>%
measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(
arch_strong              ~ arch_weak
# arch_weak                ~ arch_graphic,
# arch_graphic             ~ control,
# arch_weak + arch_graphic ~ curb_appeal + control
),
stat_classifier,
num_permutations = 10
) %>% pull(stats_permuted)
df %>%
measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(
arch_strong              ~ arch_weak
# arch_weak                ~ arch_graphic,
# arch_graphic             ~ control,
# arch_weak + arch_graphic ~ curb_appeal + control
),
stat_classifier,
num_permutations = 10
)
stat_classifier
stat_classifier
?stat_classifier
?mutate
source('~/Documents/texttest/R/stat_classifier.R', echo=TRUE)
df %>%
measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(
arch_strong              ~ arch_weak
# arch_weak                ~ arch_graphic,
# arch_graphic             ~ control,
# arch_weak + arch_graphic ~ curb_appeal + control
),
stat_classifier,
num_permutations = 10
)
source('~/Documents/texttest/R/stat_classifier.R', echo=TRUE)
df %>%
measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(
arch_strong              ~ arch_weak
# arch_weak                ~ arch_graphic,
# arch_graphic             ~ control,
# arch_weak + arch_graphic ~ curb_appeal + control
),
stat_classifier,
num_permutations = 10
)
Concordance
source('~/Documents/texttest/R/stat_classifier.R', echo=TRUE)
df %>%
measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(
arch_strong              ~ arch_weak
# arch_weak                ~ arch_graphic,
# arch_graphic             ~ control,
# arch_weak + arch_graphic ~ curb_appeal + control
),
stat_classifier,
num_permutations = 10
)
source('~/Documents/texttest/R/stat_classifier.R', echo=TRUE)
source('~/Documents/texttest/R/stat_classifier.R', echo=TRUE)
df %>%
measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(
arch_strong              ~ arch_weak
# arch_weak                ~ arch_graphic,
# arch_graphic             ~ control,
# arch_weak + arch_graphic ~ curb_appeal + control
),
stat_classifier,
num_permutations = 10
)
source('~/Documents/texttest/R/stat_classifier.R', echo=TRUE)
df %>%
measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(
arch_strong              ~ arch_weak
# arch_weak                ~ arch_graphic,
# arch_graphic             ~ control,
# arch_weak + arch_graphic ~ curb_appeal + control
),
stat_classifier,
num_permutations = 10
)
source('~/Documents/texttest/R/stat_classifier.R', echo=TRUE)
df %>%
measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(
arch_strong              ~ arch_weak
# arch_weak                ~ arch_graphic,
# arch_graphic             ~ control,
# arch_weak + arch_graphic ~ curb_appeal + control
),
stat_classifier,
num_permutations = 10
)
source('~/Documents/texttest/R/stat_classifier.R', echo=TRUE)
source('~/Documents/texttest/R/stat_classifier.R', echo=TRUE)
df %>%
measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(
arch_strong              ~ arch_weak
# arch_weak                ~ arch_graphic,
# arch_graphic             ~ control,
# arch_weak + arch_graphic ~ curb_appeal + control
),
stat_classifier,
num_permutations = 10
)
source('~/Documents/texttest/R/stat_classifier.R', echo=TRUE)
df %>%
measure(
cols = vars(post_q),
response_measure = measure_count_targets,
targets = arm_word_lists$architecture
) %>%
digest(
c(
arch_strong              ~ arch_weak
# arch_weak                ~ arch_graphic,
# arch_graphic             ~ control,
# arch_weak + arch_graphic ~ curb_appeal + control
),
stat_classifier,
num_permutations = 10
)
